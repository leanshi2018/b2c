<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.framework.loippi.dao.common.ShopRecommendationGoodsDao">

    <resultMap id="ShopRecommendationGoodsResultMap" type="com.framework.loippi.entity.common.ShopRecommendationGoods">
        <id property="id" column="id"/>
        <result property="rId" column="r_id"/>
        <result property="goodsId" column="goods_id"/>
    </resultMap>

    <!-- 定义可重用的SQL代码段，可以包含在其他语句中 -->
    <sql id="base_column">
        id ,r_id ,goods_id
    </sql>

    <sql id="base_value_column">
        #{id},#{rId},#{goodsId}
    </sql>

    <!-- 定义可重用的WHERE SQL公共代码段，可以包含在其他语句中 -->
    <sql id="where_column">
        <if test="id != null">
            AND id = #{id,jdbcType=BIGINT}
        </if>
        <if test="rId != null">
            AND r_id = #{rId,jdbcType=BIGINT}
        </if>
        <if test="goodsId != null">
            AND goods_id = #{goodsId,jdbcType=BIGINT}
        </if>
    </sql>

    <!-- 设置语句 -->
    <sql id="set_column">
        <if test="id != null">
            id = #{id,jdbcType=BIGINT},
        </if>
        <if test="rId != null">
            r_id = #{rId,jdbcType=BIGINT},
        </if>
        <if test="goodsId != null">
            goods_id = #{goodsId,jdbcType=BIGINT},
        </if>
    </sql>

    <!-- 根据ID查询 -->
    <select id="find" resultMap="ShopRecommendationGoodsResultMap">
        SELECT
        <include refid="base_column"/>
        FROM shop_recommendation_goods
        WHERE ID=#{id,jdbcType=BIGINT}
    </select>

    <!-- 查询所有 -->
    <select id="findAll" resultMap="ShopRecommendationGoodsResultMap">
        SELECT
        <include refid="base_column"/>
        FROM shop_recommendation_goods
    </select>

    <!-- 统计记录数 -->
    <select id="count" resultType="long">
        SELECT COUNT(*) FROM shop_recommendation_goods
        <where>
            <include refid="where_column"/>
        </where>
    </select>

    <!-- 插入 -->
    <insert id="insert" parameterType="com.framework.loippi.entity.common.ShopRecommendationGoods">
        <selectKey resultType="java.lang.Long" order="AFTER" keyProperty="id">
            SELECT LAST_INSERT_ID() AS ID
        </selectKey>
        INSERT shop_recommendation_goods
        (
        <include refid="base_column"/>
        )
        VALUES (<include refid="base_value_column"/>)
    </insert>

    <!-- 修改 -->
    <update id="update" parameterType="com.framework.loippi.entity.common.ShopRecommendationGoods">
        UPDATE shop_recommendation_goods
        <set>
            <include refid="set_column"/>
        </set>
        WHERE ID = #{id,jdbcType=BIGINT}
    </update>

    <!-- 删除单条记录 -->
    <delete id="delete">
        DELETE FROM shop_recommendation_goods
        WHERE ID = #{id,jdbcType=BIGINT}
    </delete>

    <!-- 删除多条记录-->
    <delete id="deleteAll">
        DELETE FROM shop_recommendation_goods
        WHERE ID IN
        <foreach item="ShopRecommendationGoodsIds" index="index" collection="ids" open="(" separator="," close=")">
            #{ShopRecommendationGoodsId}
        </foreach>
    </delete>

    <!-- 根据参数查询列表-->
    <select id="findByParams" resultMap="ShopRecommendationGoodsResultMap">
        SELECT
        <include refid="base_column"/>
        FROM shop_recommendation_goods
        <where>1=1
            <include refid="where_column"/>
        </where>
    </select>

    <!-- 分页查询-->
    <select id="findByPage" resultMap="ShopRecommendationGoodsResultMap">
        SELECT
        <include refid="base_column"/>
        FROM shop_recommendation_goods
        <where>1=1
            <include refid="where_column"/>
        </where>
    </select>

    <delete id="delByRId">
        DELETE FROM shop_recommendation_goods
        WHERE r_id = #{rId}
    </delete>

    <select id="findGoodsResult" parameterType="com.framework.loippi.result.common.recommendation.RecommendationGoodsResult"
            resultType="com.framework.loippi.result.common.recommendation.RecommendationGoodsResult">
        SELECT
        a.id id,
        a.r_id rId,
        a.goods_id goodsId,
        b.goods_name goodsName,
        b.gc_id gcId,
        b.gc_name gcName
        FROM shop_recommendation_goods a
        LEFT JOIN shop_goods b on a.goods_id=b.id
        where 1=1
        <if test="rId != null and rId != ''">
            AND a.r_id = #{rId}
        </if>
        <if test="goodsId != null and goodsId != ''">
            AND a.goods_id = #{goodsId}
        </if>
        <if test="goodsName != null and goodsName != ''">
            AND b.goods_name like CONCAT('%',#{goodsName},'%')
        </if>
    </select>


</mapper>