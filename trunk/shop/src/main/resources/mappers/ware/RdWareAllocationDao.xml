<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace必须指向Dao接口 -->
<mapper namespace="com.framework.loippi.dao.ware.RdWareAllocationDao">

    <resultMap id="RdWareAllocationResultMap" type="com.framework.loippi.entity.ware.RdWareAllocation">
        <id property="wId" column="WID"  />
        <result property="wareCodeIn" column="WARE_CODE_IN" />
        <result property="wareNameIn" column="WARE_NAME_IN" />
        <result property="wareCodeOut" column="WARE_CODE_OUT" />
        <result property="wareNameOut" column="WARE_NAME_OUT" />
        <result property="attachAdd" column="ATTACH_ADD" />
        <result property="status" column="STATUS" />
        <result property="wareOrderSn" column="WARE_ORDER_SN" />
        <result property="autohrizeBy" column="AUTOHRIZE_BY" />
        <result property="autohrizeTime" column="AUTOHRIZE_TIME" />
        <result property="autohrizeDesc" column="AUTOHRIZE_DESC" />
        <result property="createTime" column="CREATE_TIME" />
    </resultMap>

    <!-- 定义可重用的SQL代码段，可以包含在其他语句中 -->
    <sql id="base_column">
		 WID ,WARE_CODE_IN ,WARE_NAME_IN ,WARE_CODE_OUT ,WARE_NAME_OUT ,ATTACH_ADD ,STATUS ,WARE_ORDER_SN ,AUTOHRIZE_BY ,AUTOHRIZE_TIME ,AUTOHRIZE_DESC,CREATE_TIME
	</sql>

    <sql id="base_value_column">
		 #{wId},#{wareCodeIn},#{wareNameIn},#{wareCodeOut},#{wareNameOut},#{attachAdd},#{status},#{wareOrderSn},#{autohrizeBy},#{autohrizeTime},#{autohrizeDesc},#{createTime}
	</sql>

    <!-- 定义可重用的WHERE SQL公共代码段，可以包含在其他语句中 -->
    <sql id="where_column">
		<if test="wId != null and wId != ''">
			AND WId = #{wId,jdbcType=INTEGER}
		</if>
		<if test="wareCodeIn != null and wareCodeIn != ''">
			AND WARE_CODE_IN = #{wareCodeIn,jdbcType=VARCHAR}
		</if>
		<if test="wareNameIn != null and wareNameIn != ''">
			AND WARE_NAME_IN = #{wareNameIn,jdbcType=VARCHAR}
		</if>
		<if test="wareCodeOut != null and wareCodeOut != ''">
			AND WARE_CODE_OUT = #{wareCodeOut,jdbcType=VARCHAR}
		</if>
		<if test="wareNameOut != null and wareNameOut != ''">
			AND WARE_NAME_OUT = #{wareNameOut,jdbcType=VARCHAR}
		</if>
		<if test="attachAdd != null and attachAdd != ''">
			AND ATTACH_ADD = #{attachAdd,jdbcType=VARCHAR}
		</if>
		<if test="status != null and status != ''">
			AND STATUS = #{status,jdbcType=INTEGER}
		</if>
		<if test="wareOrderSn != null and wareOrderSn != ''">
			AND WARE_ORDER_SN = #{wareOrderSn,jdbcType=VARCHAR}
		</if>
		<if test="autohrizeBy != null and autohrizeBy != ''">
			AND AUTOHRIZE_BY = #{autohrizeBy,jdbcType=VARCHAR}
		</if>
		<if test="autohrizeTime != null and autohrizeTime != ''">
			AND AUTOHRIZE_TIME = #{autohrizeTime,jdbcType=TIMESTAMP}
		</if>
		<if test="autohrizeDesc != null and autohrizeDesc != ''">
			AND AUTOHRIZE_DESC = #{autohrizeDesc,jdbcType=VARCHAR}
		</if>
		<if test="searchTimeLeft != null and searchTimeLeft != ''">
			AND CREATE_TIME >= #{searchTimeLeft}
		</if>
		<if test="searchTimeRight != null and searchTimeRight != ''">
			AND CREATE_TIME &lt;= #{searchTimeRight}
		</if>
		<if test="createTime != null and createTime != ''">
			AND CREATE_TIME = #{createTime,jdbcType=TIMESTAMP}
		</if>
    </sql>

	<!-- 设置语句 -->
	<sql id="set_column">
		<if test="wId != null and wId != ''">
			WID = #{wId,jdbcType=INTEGER},
		</if>
		<if test="wareCodeIn != null and wareCodeIn != ''">
			WARE_CODE_IN = #{wareCodeIn,jdbcType=VARCHAR},
		</if>
		<if test="wareNameIn != null and wareNameIn != ''">
			WARE_NAME_IN = #{wareNameIn,jdbcType=VARCHAR},
		</if>
		<if test="wareCodeOut != null and wareCodeOut != ''">
			WARE_CODE_OUT = #{wareCodeOut,jdbcType=VARCHAR},
		</if>
		<if test="wareNameOut != null and wareNameOut != ''">
			WARE_NAME_OUT = #{wareNameOut,jdbcType=VARCHAR},
		</if>
		<if test="attachAdd != null and attachAdd != ''">
			ATTACH_ADD = #{attachAdd,jdbcType=VARCHAR},
		</if>
		<if test="status != null and status != ''">
			STATUS = #{status,jdbcType=INTEGER},
		</if>
		<if test="wareOrderSn != null and wareOrderSn != ''">
			WARE_ORDER_SN = #{wareOrderSn,jdbcType=VARCHAR},
		</if>
		<if test="autohrizeBy != null and autohrizeBy != ''">
			AUTOHRIZE_BY = #{autohrizeBy,jdbcType=VARCHAR},
		</if>
		<if test="autohrizeTime != null and autohrizeTime != ''">
			AUTOHRIZE_TIME = #{autohrizeTime,jdbcType=TIMESTAMP},
		</if>
		<if test="autohrizeDesc != null and autohrizeDesc != ''">
			AUTOHRIZE_DESC = #{autohrizeDesc,jdbcType=VARCHAR},
		</if>
		<if test="createTime != null and createTime != ''">
			 CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
		</if>
	</sql>

    <!-- 根据ID查询 -->
    <select id="find" resultMap="RdWareAllocationResultMap">
        SELECT	<include refid="base_column" />
        FROM	rd_ware_allocation
        WHERE	WID=#{id,jdbcType=BIGINT}
    </select>

    <!-- 查询所有 -->
    <select id="findAll" resultMap="RdWareAllocationResultMap">
        SELECT	<include refid="base_column" />
        FROM	rd_ware_allocation
    </select>

    <!-- 统计记录数 -->
    <select id="count" resultType="long">
        SELECT COUNT(*) FROM rd_ware_allocation
        <where>
            <include refid="where_column" />
        </where>
    </select>

    <!-- 插入 -->
    <insert id="insert" parameterType="com.framework.loippi.entity.ware.RdWareAllocation">
        <selectKey resultType="java.lang.Integer" order="AFTER" keyProperty="wId">
            SELECT LAST_INSERT_ID() AS WID
        </selectKey>
        INSERT rd_ware_allocation
        (<include refid="base_column" /> )
        VALUES	(<include refid="base_value_column" />)
    </insert>

    <!-- 修改 -->
    <update id="update" parameterType="com.framework.loippi.entity.ware.RdWareAllocation">
        UPDATE	rd_ware_allocation
        <set>
            <include refid="set_column" />
        </set>
        WHERE	WID = #{wId,jdbcType=BIGINT}
    </update>

    <!-- 删除单条记录 -->
    <delete id="delete">
		DELETE	FROM rd_ware_allocation
		WHERE	WID = #{wId,jdbcType=BIGINT}
	</delete>

    <!-- 删除多条记录-->
    <delete id="deleteAll">
        DELETE	FROM rd_ware_allocation
        WHERE	WID	IN
        <foreach item="RdWareAllocationIds" index="index" collection="ids" open="(" separator="," close=")">
            #{RdWareAllocationId}
        </foreach>
    </delete>

    <!-- 根据参数查询列表-->
    <select id="findByParams" resultMap="RdWareAllocationResultMap">
        SELECT	<include refid="base_column" />
        FROM 	rd_ware_allocation
        <where> 1=1
            <include refid="where_column" />
        </where>
		order by CREATE_TIME desc
    </select>

    <!-- 分页查询-->
    <select id="findByPage" resultMap="RdWareAllocationResultMap">
        SELECT
        <include refid="base_column" />
        FROM rd_ware_allocation
        <where> 1=1
            <include refid="where_column" />
        </where>
        order by CREATE_TIME desc
    </select>

	<select id="findBySn" parameterType="string" resultMap="RdWareAllocationResultMap">
		SELECT	<include refid="base_column" />
		FROM 	rd_ware_allocation
		WHERE WARE_ORDER_SN = #{wareOrderSn}
	</select>

	<select id="haveAllocation" parameterType="map" resultMap="RdWareAllocationResultMap">
		SELECT	<include refid="base_column" />
		FROM 	rd_ware_allocation
		WHERE WARE_CODE_IN = #{wareCodeIn} AND STATUS = #{status}
	</select>


</mapper>