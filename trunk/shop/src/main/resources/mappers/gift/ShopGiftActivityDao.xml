<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.framework.loippi.dao.gift.ShopGiftActivityDao">

    <resultMap id="ShopGiftActivityMap" type="com.framework.loippi.entity.gift.ShopGiftActivity">
        <id property="id" column="id"/>
        <result property="activityName" column="activity_name"/>
        <result property="ppv1" column="ppv1"/>
        <result property="ppv2" column="ppv2"/>
        <result property="ppv3" column="ppv3"/>
        <result property="giftNum" column="gift_num"/>
        <result property="startTime" column="start_time"/>
        <result property="endTime" column="end_time"/>
        <result property="estate" column="e_state"/>
        <result property="creationBy" column="creation_by"/>
        <result property="creationTime" column="creation_time"/>
        <result property="updateBy" column="update_by"/>
        <result property="updateTime" column="update_time"/>
    </resultMap>

    <!-- 定义可重用的SQL代码段，可以包含在其他语句中 -->
    <sql id="base_column">
        id ,activity_name ,ppv1 ,ppv2 ,ppv3 ,gift_num ,start_time ,end_time ,e_state ,creation_by ,creation_time ,update_by ,update_time
    </sql>

    <sql id="base_value_column">
        #{id},#{activityName},#{ppv1},#{ppv2},#{ppv3},#{giftNum},#{startTime},#{endTime},#{estate},#{creationBy},#{creationTime},#{updateBy},#{updateTime}
    </sql>

    <!-- 定义可重用的WHERE SQL公共代码段，可以包含在其他语句中 -->
    <sql id="where_column">
        <if test="id != null and id != ''">
            AND id = #{id,jdbcType=BIGINT}
        </if>
        <if test="activityName != null and activityName != ''">
            AND activity_name = #{activityName,jdbcType=VARCHAR}
        </if>
        <if test="ppv1 != null">
            AND ppv1 = #{ppv1}
        </if>
        <if test="ppv2 != null">
            AND ppv2 = #{ppv2}
        </if>
        <if test="ppv3 != null">
            AND ppv3 = #{ppv3}
        </if>
        <if test="giftNum != null">
            AND gift_num = #{giftNum}
        </if>
        <if test="startTime != null">
            AND start_time = #{startTime}
        </if>
        <if test="endTime != null">
            AND end_time = #{endTime}
        </if>
        <if test="estate != null">
            AND e_state = #{estate,jdbcType=INTEGER}
        </if>
        <if test="creationBy != null and creationBy != ''">
            AND creation_by = #{creationBy,jdbcType=VARCHAR}
        </if>
        <if test="creationTime != null">
            AND creation_time = #{creationTime}
        </if>
        <if test="updateBy != null and updateBy != ''">
            AND update_by = #{updateBy,jdbcType=VARCHAR}
        </if>
        <if test="updateTime != null">
            AND update_time = #{updateTime}
        </if>
    </sql>

    <!-- 设置语句 -->
    <sql id="set_column">
        <if test="id != null">
            id = #{id,jdbcType=BIGINT},
        </if>
        <if test="activityName != null and activityName != ''">
            activity_name = #{activityName,jdbcType=VARCHAR},
        </if>
        <if test="ppv1 != null">
            ppv1 = #{ppv1},
        </if>
        <if test="ppv2 != null">
            ppv2 = #{ppv2},
        </if>
        <if test="ppv3 != null">
            ppv3 = #{ppv3},
        </if>
        <if test="giftNum != null">
            gift_num = #{giftNum},
        </if>
        <if test="startTime != null">
            start_time = #{startTime},
        </if>
        <if test="endTime != null">
            end_time = #{endTime},
        </if>
        <if test="estate != null">
            e_state = #{estate,jdbcType=INTEGER},
        </if>
        <if test="creationBy != null and creationBy != ''">
            creation_by = #{creationBy,jdbcType=VARCHAR},
        </if>
        <if test="creationTime != null">
            creation_time = #{creationTime},
        </if>
        <if test="updateBy != null and updateBy != ''">
            update_by = #{updateBy,jdbcType=VARCHAR},
        </if>
        <if test="updateTime != null">
            update_time = #{updateTime},
        </if>
    </sql>

    <!-- 根据ID查询 -->
    <select id="find" resultMap="ShopGiftActivityMap">
        SELECT
        <include refid="base_column"/>
        FROM shop_gift_activity
        WHERE ID=#{id,jdbcType=BIGINT}
    </select>

    <!-- 查询所有 -->
    <select id="findAll" resultMap="ShopGiftActivityMap">
        SELECT
        <include refid="base_column"/>
        FROM shop_gift_activity
    </select>

    <!-- 统计记录数 -->
    <select id="count" resultType="long">
        SELECT COUNT(*) FROM shop_gift_activity
        <where>
            <include refid="where_column"/>
        </where>
    </select>

    <!-- 插入 -->
    <insert id="insert" parameterType="com.framework.loippi.entity.gift.ShopGiftActivity">
        <selectKey resultType="java.lang.Long" order="AFTER" keyProperty="id">
            SELECT LAST_INSERT_ID() AS ID
        </selectKey>
        INSERT shop_gift_activity
        (
        <include refid="base_column"/>
        )
        VALUES (<include refid="base_value_column"/>)
    </insert>

    <!-- 修改 -->
    <update id="update" parameterType="com.framework.loippi.entity.gift.ShopGiftActivity">
        UPDATE shop_gift_activity
        <set>
            <include refid="set_column"/>
        </set>
        WHERE ID = #{id,jdbcType=BIGINT}
    </update>

    <!-- 删除单条记录 -->
    <delete id="delete">
        DELETE FROM shop_gift_activity
        WHERE ID = #{id,jdbcType=BIGINT}
    </delete>

    <!-- 删除多条记录-->
    <delete id="deleteAll">
        DELETE FROM shop_gift_activity
        WHERE ID IN
        <foreach item="id" index="index" collection="ids" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <!-- 根据参数查询列表-->
    <select id="findByParams" resultMap="ShopGiftActivityMap">
        SELECT
        <include refid="base_column"/>
        FROM shop_gift_activity
        <where>1=1
            <include refid="where_column"/>
        </where>
    </select>

    <!-- 分页查询-->
    <select id="findByPage" resultMap="ShopGiftActivityMap">
        SELECT
        <include refid="base_column"/>
        FROM shop_gift_activity
        <where>1=1
            <include refid="where_column"/>
        </where>
    </select>

    <select id="findByState" parameterType="java.lang.Integer" resultMap="ShopGiftActivityMap">
        SELECT
        <include refid="base_column"/>
        FROM shop_gift_activity
        WHERE e_state = #{estate}
    </select>

    <update id="updateByEState" parameterType="java.lang.Integer">
        UPDATE shop_gift_activity
        SET e_state = #{estate}
        WHERE e_state = 0
    </update>

</mapper>