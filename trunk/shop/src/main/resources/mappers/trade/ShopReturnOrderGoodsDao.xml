<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace必须指向Dao接口 -->
<mapper namespace="com.framework.loippi.dao.trade.ShopReturnOrderGoodsDao">
	
	<resultMap id="ShopReturnOrderGoodsResultMap" type="com.framework.loippi.entity.trade.ShopReturnOrderGoods">
		<id property="id" column="id"  />
		<result property="returnOrderId" column="return_order_id" />
		<result property="goodsNum" column="goods_num" />
		<result property="updateTime" column="update_time" />
		<result property="createTime" column="create_time" />
		<result property="goodsId" column="goods_id" />
		<result property="orderGoodsId" column="order_goods_id" />
		<result property="goodsName" column="goods_name" />
		<result property="goodsImage" column="goods_image" />
		<result property="specId" column="spec_id" />
		<result property="specInfo" column="spec_info" />
		<result property="price" column="price" />
		<result property="goodsType" column="goods_type" />
		<result property="ppv" column="ppv" />
	</resultMap>
	
	<!-- 定义可重用的SQL代码段，可以包含在其他语句中 -->
	<sql id="base_column">
		 id ,return_order_id ,goods_num ,update_time ,create_time ,goods_id ,order_goods_id ,goods_name ,goods_image ,spec_id ,spec_info,price,goods_type,ppv
	</sql>
	
	<sql id="base_value_column">
		 #{id},#{returnOrderId},#{goodsNum},#{updateTime},#{createTime},#{goodsId},#{orderGoodsId},#{goodsName},#{goodsImage},#{specId},#{specInfo},#{price},#{goodsType},#{ppv}
	</sql>
	
	<!-- 定义可重用的WHERE SQL公共代码段，可以包含在其他语句中 -->
	<sql id="where_column">
		<if test="id != null and id != ''">
			AND id = #{id,jdbcType=BIGINT}
		</if>
		<if test="returnOrderId != null and returnOrderId != ''">
			AND return_order_id = #{returnOrderId,jdbcType=BIGINT}
		</if>
		<if test="goodsNum != null and goodsNum != ''">
			AND goods_num = #{goodsNum}
		</if>
		<if test="updateTime != null and updateTime != ''">
			AND update_time = #{updateTime}
		</if>
		<if test="createTime != null and createTime != ''">
			AND create_time = #{createTime}
		</if>
		<if test="goodsId != null and goodsId != ''">
			AND goods_id = #{goodsId,jdbcType=BIGINT}
		</if>
		<if test="orderGoodsId != null and orderGoodsId != ''">
			AND order_goods_id = #{orderGoodsId,jdbcType=BIGINT}
		</if>
		<if test="goodsName != null and goodsName != ''">
			AND goods_name = #{goodsName,jdbcType=VARCHAR}
		</if>
		<if test="goodsImage != null and goodsImage != ''">
			AND goods_image = #{goodsImage,jdbcType=VARCHAR}
		</if>
		<if test="specId != null and specId != ''">
			AND spec_id = #{specId,jdbcType=BIGINT}
		</if>
		<if test="specInfo != null and specInfo != ''">
			AND spec_info = #{specInfo,jdbcType=VARCHAR}
		</if>
		<if test="price != null and price != ''">
			AND price = #{price}
		</if>
		<if test="goodsType != null and goodsType != ''">
			AND goods_type = #{goodsType}
		</if>
		<if test="ppv != null and ppv != ''">
			AND ppv = #{ppv}
		</if>
	</sql>
	
	<!-- 设置语句 -->
	<sql id="set_column">
		<if test="id != null">
			id = #{id,jdbcType=BIGINT},
		</if>
		<if test="returnOrderId != null">
			return_order_id = #{returnOrderId,jdbcType=BIGINT},
		</if>
		<if test="goodsNum != null and goodsNum != ''">
			 goods_num = #{goodsNum},
		</if>
		<if test="updateTime != null">
			update_time = #{updateTime,jdbcType=},
		</if>
		<if test="createTime != null">
			create_time = #{createTime,jdbcType=},
		</if>
		<if test="goodsId != null">
			goods_id = #{goodsId,jdbcType=BIGINT},
		</if>
		<if test="orderGoodsId != null">
			order_goods_id = #{orderGoodsId,jdbcType=BIGINT},
		</if>
		<if test="goodsName != null and goodsName != ''">
			goods_name = #{goodsName,jdbcType=VARCHAR},
		</if>
		<if test="goodsImage != null and goodsImage != ''">
			goods_image = #{goodsImage,jdbcType=VARCHAR},
		</if>
		<if test="specId != null">
			spec_id = #{specId,jdbcType=BIGINT},
		</if>
		<if test="specInfo != null and specInfo != ''">
			spec_info = #{specInfo,jdbcType=VARCHAR},
		</if>
		<if test="price != null and price != ''">
			 price = #{price},
		</if>
		<if test="goodsType != null and goodsType != ''">
			goods_type = #{goodsType},
		</if>
		<if test="ppv != null and ppv != ''">
			 ppv = #{ppv},
		</if>
	</sql>

	<!-- 根据ID查询 -->
	<select id="find" resultMap="ShopReturnOrderGoodsResultMap">
		SELECT	<include refid="base_column" />
		FROM	SHOP_RETURN_ORDER_GOODS
		WHERE	ID=#{id,jdbcType=BIGINT}
	</select>
	
	<!-- 查询所有 -->
	<select id="findAll" resultMap="ShopReturnOrderGoodsResultMap">
		SELECT	<include refid="base_column" />
		FROM	SHOP_RETURN_ORDER_GOODS
	</select>

	<select id="listByReturnOrderId" resultMap="ShopReturnOrderGoodsResultMap">
		select
		<include refid="base_column"/>
		from SHOP_RETURN_ORDER_GOODS
		where return_order_id = #{orderId}
	</select>
	<!-- 统计记录数 -->
	<select id="count" resultType="long">
		SELECT COUNT(*) FROM SHOP_RETURN_ORDER_GOODS
		<where> 
			<include refid="where_column" />
		</where>
	</select>
	
	<!-- 插入 -->
	<insert id="insert" parameterType="com.framework.loippi.entity.trade.ShopReturnOrderGoods">
		<selectKey resultType="java.lang.Long" order="AFTER" keyProperty="id">  
	          SELECT LAST_INSERT_ID() AS ID    
	    </selectKey>  
		INSERT SHOP_RETURN_ORDER_GOODS 
				(<include refid="base_column" /> )
		VALUES	(<include refid="base_value_column" />)
	</insert>
	
	<!-- 修改 -->
	<update id="update" parameterType="com.framework.loippi.entity.trade.ShopReturnOrderGoods">
		UPDATE	SHOP_RETURN_ORDER_GOODS
		<set>
			<include refid="set_column" />
		</set>
		WHERE	ID = #{id,jdbcType=BIGINT}
	</update>
	
	<!-- 删除单条记录 -->
	<delete id="delete">
		DELETE	FROM SHOP_RETURN_ORDER_GOODS
		WHERE	ID = #{id,jdbcType=BIGINT}
	</delete>
	
	<!-- 删除多条记录-->
	<delete id="deleteAll">
		DELETE	FROM SHOP_RETURN_ORDER_GOODS
		WHERE	ID	IN
    	<foreach item="ShopReturnOrderGoodsId" index="index" collection="ids" open="(" separator="," close=")">
	  		#{ShopReturnOrderGoodsId} 
		</foreach>
	</delete>
	
	<!-- 根据参数查询列表-->
	<select id="findByParams" resultMap="ShopReturnOrderGoodsResultMap">
		SELECT	<include refid="base_column" />
		FROM 	SHOP_RETURN_ORDER_GOODS
		<where> 1=1
			<include refid="where_column" />
		</where>
	</select>
	
	<!-- 分页查询-->
	<select id="findByPage" resultMap="ShopReturnOrderGoodsResultMap">
		SELECT
		<include refid="base_column" />
		FROM SHOP_RETURN_ORDER_GOODS
		<where> 1=1
			<include refid="where_column" />
		</where>
	</select>
	
</mapper> 