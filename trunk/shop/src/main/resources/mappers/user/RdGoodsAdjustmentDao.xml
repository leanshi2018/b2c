<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace必须指向Dao接口 -->
<mapper namespace="com.framework.loippi.dao.user.RdGoodsAdjustmentDao">
	
	<resultMap id="RdGoodsAdjustmentResultMap" type="com.framework.loippi.entity.user.RdGoodsAdjustment">
		<id property="id" column="id"  />
		<result property="goodId" column="good_id" />
		<result property="goodsName" column="goods_name" />
		<result property="specName" column="spec_name" />
		<result property="goodsSpec" column="goods_spec" />
		<result property="stockNow" column="stock_now" />
		<result property="stockInto" column="stock_into" />
		<result property="createTime" column="create_time" />
		<result property="qualityTime" column="quality_time" />
		<result property="shelfLifeTime" column="shelf_life_time" />
		<result property="wareCode" column="ware_code" />
		<result property="wid" column="wId" />
		<result property="status" column="status" />
		<result property="sign" column="sign" />
		<result property="autohrizeTime" column="autohrize_time" />
		<result property="specificationId" column="specification_id" />
		<result property="specGoodsSerial" column="spec_goods_serial" />
		<result property="precautiousLine" column="precautious_line" />
	</resultMap>
	
	<!-- 定义可重用的SQL代码段，可以包含在其他语句中 -->
	<sql id="base_column">
		 id ,good_id ,goods_name ,spec_name ,goods_spec ,stock_now ,stock_into ,create_time ,quality_time ,shelf_life_time ,ware_code ,wId ,status ,sign,autohrize_time,specification_id,spec_goods_serial,precautious_line
	</sql>
	
	<sql id="base_value_column">
		 #{id},#{goodId},#{goodsName},#{specName},#{goodsSpec},#{stockNow},#{stockInto},#{createTime},#{qualityTime},#{shelfLifeTime},#{wareCode},#{wid},#{status},#{sign},#{autohrizeTime},#{specificationId},#{specGoodsSerial},#{precautiousLine}
	</sql>
	
	<!-- 定义可重用的WHERE SQL公共代码段，可以包含在其他语句中 -->
	<sql id="where_column">
		<if test="id != null and id != ''">
			AND id = #{id,jdbcType=BIGINT}
		</if>
		<if test="goodId != null and goodId != ''">
			AND good_id = #{goodId,jdbcType=BIGINT}
		</if>
		<if test="goodsName != null and goodsName != ''">
			AND goods_name = #{goodsName,jdbcType=VARCHAR}
		</if>
		<if test="specName != null and specName != ''">
			AND spec_name = #{specName,jdbcType=VARCHAR}
		</if>
		<if test="goodsSpec != null and goodsSpec != ''">
			AND goods_spec = #{goodsSpec,jdbcType=VARCHAR}
		</if>
		<if test="stockNow != null and stockNow != ''">
			AND stock_now = #{stockNow,jdbcType=BIGINT}
		</if>
		<if test="stockInto != null and stockInto != ''">
			AND stock_into = #{stockInto,jdbcType=BIGINT}
		</if>
		<if test="createTime != null and createTime != ''">
			AND create_time = #{createTime,jdbcType=TIMESTAMP}
		</if>
		<if test="qualityTime != null and qualityTime != ''">
			AND quality_time = #{qualityTime,jdbcType=BIGINT}
		</if>
		<if test="shelfLifeTime != null and shelfLifeTime != ''">
			AND shelf_life_time = #{shelfLifeTime,jdbcType=TIMESTAMP}
		</if>
		<if test="wareCode != null and wareCode != ''">
			AND ware_code = #{wareCode,jdbcType=VARCHAR}
		</if>
		<if test="wid != null and wid != ''">
			AND wId = #{wid,jdbcType=INTEGER}
		</if>
		<if test="status != null">
			AND status = #{status,jdbcType=BIGINT}
		</if>
		<if test="sign != null and sign != ''">
			AND sign = #{sign}
		</if>
		<if test="autohrizeTime != null and autohrizeTime != ''">
			AND autohrize_time = #{autohrizeTime}
		</if>
		<if test="specificationId != null and specificationId != ''">
			AND specification_id = #{specificationId}
		</if>
		<if test="specGoodsSerial != null and specGoodsSerial != ''">
			AND spec_goods_serial = #{specGoodsSerial}
		</if>
		<if test="precautiousLine != null">
			AND precautious_line = #{precautiousLine}
		</if>

	</sql>
	
	<!-- 设置语句 -->
	<sql id="set_column">
		<if test="id != null">
			id = #{id,jdbcType=BIGINT},
		</if>
		<if test="goodId != null">
			good_id = #{goodId,jdbcType=BIGINT},
		</if>
		<if test="goodsName != null and goodsName != ''">
			goods_name = #{goodsName,jdbcType=VARCHAR},
		</if>
		<if test="specName != null and specName != ''">
			spec_name = #{specName,jdbcType=VARCHAR},
		</if>
		<if test="goodsSpec != null and goodsSpec != ''">
			goods_spec = #{goodsSpec,jdbcType=VARCHAR},
		</if>
		<if test="stockNow != null">
			stock_now = #{stockNow,jdbcType=BIGINT},
		</if>
		<if test="stockInto != null">
			stock_into = #{stockInto,jdbcType=BIGINT},
		</if>
		<if test="createTime != null">
			create_time = #{createTime,jdbcType=TIMESTAMP},
		</if>
		<if test="qualityTime != null">
			quality_time = #{qualityTime,jdbcType=BIGINT},
		</if>
		<if test="shelfLifeTime != null">
			shelf_life_time = #{shelfLifeTime,jdbcType=TIMESTAMP},
		</if>
		<if test="wareCode != null and wareCode != ''">
			ware_code = #{wareCode,jdbcType=VARCHAR},
		</if>
		<if test="wid != null">
			wId = #{wid,jdbcType=INTEGER},
		</if>
		<if test="status != null">
			status = #{status,jdbcType=BIGINT},
		</if>
		<if test="sign != null and sign != ''">
			 sign = #{sign},
		</if>
		<if test="autohrizeTime != null and autohrizeTime != ''">
			 autohrize_time = #{autohrizeTime},
		</if>
		<if test="specificationId != null and specificationId != ''">
			 specification_id = #{specificationId},
		</if>
		<if test="specGoodsSerial != null and specGoodsSerial != ''">
			spec_goods_serial = #{specGoodsSerial},
		</if>
		<if test="precautiousLine != null">
			precautious_line = #{precautiousLine},
		</if>
	</sql>

	<!-- 根据ID查询 -->
	<select id="find" resultMap="RdGoodsAdjustmentResultMap">
		SELECT	<include refid="base_column" />
		FROM	RD_GOODS_ADJUSTMENT
		WHERE	ID=#{id,jdbcType=BIGINT}
	</select>
	
	<!-- 查询所有 -->
	<select id="findAll" resultMap="RdGoodsAdjustmentResultMap">
		SELECT	<include refid="base_column" />
		FROM	RD_GOODS_ADJUSTMENT
	</select>
	
	<!-- 统计记录数 -->
	<select id="count" resultType="long">
		SELECT COUNT(*) FROM RD_GOODS_ADJUSTMENT
		<where> 
			<include refid="where_column" />
		</where>
	</select>
	
	<!-- 插入 -->
	<insert id="insert" parameterType="com.framework.loippi.entity.user.RdGoodsAdjustment">
		<selectKey resultType="java.lang.Long" order="AFTER" keyProperty="id">  
	          SELECT LAST_INSERT_ID() AS ID    
	    </selectKey>  
		INSERT RD_GOODS_ADJUSTMENT 
				(<include refid="base_column" /> )
		VALUES	(<include refid="base_value_column" />)
	</insert>
	
	<!-- 修改 -->
	<update id="update" parameterType="com.framework.loippi.entity.user.RdGoodsAdjustment">
		UPDATE	RD_GOODS_ADJUSTMENT
		<set>
			<include refid="set_column" />
		</set>
		WHERE	ID = #{id,jdbcType=BIGINT}
	</update>
	
	<!-- 删除单条记录 -->
	<delete id="delete">
		DELETE	FROM RD_GOODS_ADJUSTMENT
		WHERE	ID = #{id,jdbcType=BIGINT}
	</delete>
	
	<!-- 删除多条记录-->
	<delete id="deleteAll">
		DELETE	FROM RD_GOODS_ADJUSTMENT
		WHERE	ID	IN
    	<foreach item="RdGoodsAdjustmentId" index="index" collection="ids" open="(" separator="," close=")">
	  		#{RdGoodsAdjustmentId} 
		</foreach>
	</delete>
	
	<!-- 根据参数查询列表-->
	<select id="findByParams" resultMap="RdGoodsAdjustmentResultMap">
		SELECT	<include refid="base_column" />
		FROM 	RD_GOODS_ADJUSTMENT
		<where> 1=1
			<include refid="where_column" />
		</where>
	</select>
	
	<!-- 分页查询-->
	<select id="findByPage" resultMap="RdGoodsAdjustmentResultMap">
		SELECT
		<include refid="base_column" />
		FROM RD_GOODS_ADJUSTMENT
		<where> 1=1
			<include refid="where_column" />
			<if test="goodsNameKey != null and goodsNameKey != ''">
				AND goods_name like concat('%',#{goodsNameKey},'%')
			</if>
			<if test="specNameKey != null and specNameKey != ''">
				AND (spec_name like concat('%',#{specNameKey},'%') or goods_spec like concat('%',#{specNameKey},'%'))
			</if>
		</where>
	</select>

	<select id="findByWidAndSign" parameterType="map" resultMap="RdGoodsAdjustmentResultMap">
		SELECT	<include refid="base_column" />
		FROM 	RD_GOODS_ADJUSTMENT
		WHERE wId = #{wid} AND sign = #{sign}
	</select>

</mapper> 