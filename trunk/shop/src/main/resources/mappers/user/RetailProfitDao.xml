<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace必须指向Dao接口 -->
<mapper namespace="com.framework.loippi.dao.user.RetailProfitDao">
	
	<resultMap id="RetailProfitResultMap" type="com.framework.loippi.entity.user.RetailProfit">
		<id property="id" column="id"  />
		<result property="buyerId" column="buyer_id" />
		<result property="receiptorId" column="receiptor_id" />
		<result property="createTime" column="create_time" />
		<result property="expectTime" column="expect_time" />
		<result property="actualTime" column="actual_time" />
		<result property="profits" column="profits" />
		<result property="orderId" column="order_id" />
		<result property="orderSn" column="order_sn" />
		<result property="state" column="state" />
		<result property="remark" column="remark" />
		<result property="createPeriod" column="create_period" />
		<result property="expectPeriod" column="expect_period" />
		<result property="actualPeriod" column="actual_period" />
	</resultMap>

	<!-- 定义可重用的SQL代码段，可以包含在其他语句中 -->
	<sql id="base_column">
		 id ,buyer_id ,receiptor_id ,create_time,expect_time ,actual_time ,profits ,order_id ,order_sn ,state ,remark,create_period,expect_period,actual_period
	</sql>
	
	<sql id="base_value_column">
		 #{id},#{buyerId},#{receiptorId},#{createTime},#{expectTime},#{actualTime},#{profits},#{orderId},#{orderSn},#{state},#{remark},#{createPeriod},#{expectPeriod},#{actualPeriod}
	</sql>
	
	<!-- 定义可重用的WHERE SQL公共代码段，可以包含在其他语句中 -->
	<sql id="where_column">
		<if test="id != null and id != ''">
			AND ID = #{id,jdbcType=BIGINT}
		</if>
		<if test="buyerId != null and buyerId != ''">
			AND buyer_id = #{buyerId,jdbcType=VARCHAR}
		</if>
		<if test="receiptorId != null and receiptorId != ''">
			AND receiptor_id = #{receiptorId,jdbcType=VARCHAR}
		</if>
		<if test="createTime != null and createTime != ''">
			AND create_time = #{createTime,jdbcType=TIMESTAMP}
		</if>
		<if test="expectTime != null and expectTime != ''">
			AND expect_time = #{expectTime,jdbcType=TIMESTAMP}
		</if>
		<if test="actualTime != null and actualTime != ''">
			AND actual_time = #{actualTime,jdbcType=TIMESTAMP}
		</if>
		<if test="profits != null">
			AND profits = #{profits,jdbcType=DECIMAL}
		</if>
		<if test="orderId != null and orderId != ''">
			AND order_id = #{orderId,jdbcType=BIGINT}
		</if>
		<if test="orderSn != null and orderSn != ''">
			AND order_sn = #{orderSn,jdbcType=VARCHAR}
		</if>
		<if test="state != null and state != ''">
			AND state = #{state,jdbcType=INTEGER}
		</if>
		<if test="remark != null and remark != ''">
			AND remark = #{remark,jdbcType=VARCHAR}
		</if>
		<if test="createPeriod != null and createPeriod != ''">
			AND create_period = #{createPeriod,jdbcType=VARCHAR}
		</if>
		<if test="expectPeriod != null and expectPeriod != ''">
			AND expect_period = #{expectPeriod,jdbcType=VARCHAR}
		</if>
		<if test="actualPeriod != null and actualPeriod != ''">
			AND actual_period = #{actualPeriod,jdbcType=VARCHAR}
		</if>
	</sql>
	
	<!-- 设置语句 -->
	<sql id="set_column">
		<if test="id != null">
			ID = #{id,jdbcType=BIGINT},
		</if>
		<if test="buyerId != null and buyerId != ''">
			buyer_id = #{buyerId,jdbcType=VARCHAR},
		</if>
		<if test="receiptorId != null and receiptorId != ''">
			receiptor_id = #{receiptorId,jdbcType=VARCHAR},
		</if>
		<if test="createTime != null and createTime != ''">
			create_time = #{createTime,jdbcType=TIMESTAMP},
		</if>
		<if test="expectTime != null and expectTime != ''">
			expect_time = #{expectTime,jdbcType=TIMESTAMP},
		</if>
		<if test="actualTime != null and actualTime != ''">
			actual_time = #{actualTime,jdbcType=TIMESTAMP},
		</if>
		<if test="profits != null">
			profits = #{profits,jdbcType=DECIMAL},
		</if>
		<if test="orderId != null and orderId != ''">
			order_id = #{orderId,jdbcType=BIGINT},
		</if>
		<if test="orderSn != null and orderSn != ''">
			order_sn = #{orderSn,jdbcType=VARCHAR},
		</if>
		<if test="state != null and state != ''">
			state = #{state,jdbcType=INTEGER},
		</if>
		<if test="remark != null and remark != ''">
			remark = #{remark,jdbcType=VARCHAR},
		</if>
		<if test="createPeriod != null and createPeriod != ''">
			create_period = #{createPeriod,jdbcType=VARCHAR},
		</if>
		<if test="expectPeriod != null and expectPeriod != ''">
			expect_period = #{expectPeriod,jdbcType=VARCHAR},
		</if>
		<if test="actualPeriod != null and actualPeriod != ''">
			actual_period = #{actualPeriod,jdbcType=VARCHAR},
		</if>
	</sql>

	<!-- 根据ID查询 -->
	<select id="find" resultMap="RetailProfitResultMap">
		SELECT	<include refid="base_column" />
		FROM	retail_profit
		WHERE	ID=#{id,jdbcType=BIGINT}
	</select>
	
	<!-- 查询所有 -->
	<select id="findAll" resultMap="RetailProfitResultMap">
		SELECT	<include refid="base_column" />
		FROM	retail_profit
	</select>
	
	<!-- 统计记录数 -->
	<select id="count" resultType="long">
		SELECT COUNT(*) FROM retail_profit
		<where> 
			<include refid="where_column" />
		</where>
	</select>
	
	<!-- 插入 -->
	<insert id="insert" parameterType="com.framework.loippi.entity.user.RetailProfit">
		<selectKey resultType="java.lang.Long" order="AFTER" keyProperty="id">  
	          SELECT LAST_INSERT_ID() AS ID    
	    </selectKey>  
		INSERT retail_profit
				(<include refid="base_column" /> )
		VALUES	(<include refid="base_value_column" />)
	</insert>
	
	<!-- 修改 -->
	<update id="update" parameterType="com.framework.loippi.entity.user.RetailProfit">
		UPDATE	retail_profit
		<set>
			<include refid="set_column" />
		</set>
		WHERE	ID = #{id,jdbcType=BIGINT}
	</update>
	
	<!-- 删除单条记录 -->
	<delete id="delete">
		DELETE	FROM retail_profit
		WHERE	ID = #{id,jdbcType=BIGINT}
	</delete>
	
	<!-- 删除多条记录-->
	<delete id="deleteAll">
		DELETE	FROM retail_profit
		WHERE	ID	IN
    	<foreach item="RetailProfitId" index="index" collection="ids" open="(" separator="," close=")">
	  		#{RetailProfitId}
		</foreach>
	</delete>
	
	<!-- 根据参数查询列表-->
	<select id="findByParams" resultMap="RetailProfitResultMap">
		SELECT	<include refid="base_column" />
		FROM 	retail_profit
		<where> 1=1
			<include refid="where_column" />
		</where>
	</select>
	
	<!-- 分页查询-->
	<select id="findByPage" resultMap="RetailProfitResultMap">
		SELECT
		<include refid="base_column" />
		FROM retail_profit
		<where> 1=1
			<include refid="where_column" />
		</where>
	</select>

	<select id="findTimeMature" parameterType="string" resultMap="RetailProfitResultMap">
		select
		<include refid="base_column" />
		FROM retail_profit
		where expect_time &lt;= #{expectTime} and state = 0
	</select>

	<select id="findNoGrantByCode" parameterType="string" resultMap="RetailProfitResultMap">
		select
		<include refid="base_column" />
		FROM retail_profit
		where receiptor_id = #{receiptorId} and state = 2
	</select>

	<select id="findTotalProfit" parameterType="map" resultType="java.math.BigDecimal">
		select sum(profits) from retail_profit
		<where>
			<if test="buyerId != null and buyerId != ''">
				and buyer_id = #{buyerId}
			</if>
			<if test="receiptorId != null and receiptorId != ''">
				and receiptor_id = #{receiptorId}
			</if>
			<if test="actualPeriod != null and actualPeriod != ''">
				and actual_period = #{actualPeriod}
			</if>
			<if test="state != null">
				and state = #{state}
			</if>
		</where>
	</select>

	<select id="findPeriodPay" parameterType="map" resultType="java.math.BigDecimal">
		select sum(profits) from retail_profit
		<where>
			<if test="buyerId != null and buyerId != ''">
				and buyer_id = #{buyerId}
			</if>
			<if test="actualPeriod != null and actualPeriod != ''">
				and actual_period = #{actualPeriod}
			</if>
			and state = 1
		</where>
	</select>

	<select id="findPeriodNoPay" parameterType="map" resultType="java.math.BigDecimal">
		select sum(profits) from retail_profit
		<where>
			<if test="buyerId != null and buyerId != ''">
				and buyer_id = #{buyerId}
			</if>
			<if test="createTime != null and createTime != ''">
				and create_time = #{createTime}
			</if>
			and (state = 0 or state = 2)
		</where>
	</select>
</mapper> 