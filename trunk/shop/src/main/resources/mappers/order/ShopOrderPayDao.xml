<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace必须指向Dao接口 -->
<mapper namespace="com.framework.loippi.dao.order.ShopOrderPayDao">

  <resultMap id="ShopOrderPayResultMap" type="com.framework.loippi.entity.order.ShopOrderPay">
    <id property="id" column="id"/>
    <result property="paySn" column="pay_sn"/>
    <result property="buyerId" column="buyer_id"/>
    <result property="apiPayState" column="api_pay_state"/>
  </resultMap>

  <!-- 定义可重用的SQL代码段，可以包含在其他语句中 -->
  <sql id="base_column">
		 id ,pay_sn ,buyer_id ,api_pay_state 
	</sql>

  <sql id="base_value_column">
		 #{id},#{paySn},#{buyerId},#{apiPayState}
	</sql>

  <!-- 定义可重用的WHERE SQL公共代码段，可以包含在其他语句中 -->
  <sql id="where_column">
    <if test="id != null and id != ''">
      AND id = #{id,jdbcType=BIGINT}
    </if>
    <if test="paySn != null and paySn != ''">
      AND pay_sn = #{paySn,jdbcType=VARCHAR}
    </if>
    <if test="buyerId != null and buyerId != ''">
      AND buyer_id = #{buyerId,jdbcType=BIGINT}
    </if>
    <if test="apiPayState != null and apiPayState != ''">
      AND api_pay_state = #{apiPayState,jdbcType=VARCHAR}
    </if>
  </sql>

  <!-- 设置语句 -->
  <sql id="set_column">
    <if test="id != null">
      id = #{id,jdbcType=BIGINT},
    </if>
    <if test="paySn != null and paySn != ''">
      pay_sn = #{paySn,jdbcType=VARCHAR},
    </if>
    <if test="buyerId != null">
      buyer_id = #{buyerId,jdbcType=BIGINT},
    </if>
    <if test="apiPayState != null and apiPayState != ''">
      api_pay_state = #{apiPayState,jdbcType=VARCHAR},
    </if>
  </sql>

  <!-- 根据ID查询 -->
  <select id="find" resultMap="ShopOrderPayResultMap">
    SELECT
    <include refid="base_column"/>
    FROM SHOP_ORDER_PAY
    WHERE ID=#{id,jdbcType=BIGINT}
  </select>

  <!-- 查询所有 -->
  <select id="findAll" resultMap="ShopOrderPayResultMap">
    SELECT
    <include refid="base_column"/>
    FROM SHOP_ORDER_PAY
  </select>

  <!-- 统计记录数 -->
  <select id="count" resultType="long">
    SELECT COUNT(*) FROM SHOP_ORDER_PAY
    <where>
      <include refid="where_column"/>
    </where>
  </select>

  <!-- 插入 -->
  <insert id="insert" parameterType="com.framework.loippi.entity.order.ShopOrderPay">
    <selectKey resultType="java.lang.Long" order="AFTER" keyProperty="id">
      SELECT LAST_INSERT_ID() AS ID
    </selectKey>
    INSERT SHOP_ORDER_PAY
    (
    <include refid="base_column"/>
    )
    VALUES (<include refid="base_value_column"/>)
  </insert>

  <!-- 修改 -->
  <update id="update" parameterType="com.framework.loippi.entity.order.ShopOrderPay">
    UPDATE SHOP_ORDER_PAY
    <set>
      <include refid="set_column"/>
    </set>
    WHERE ID = #{id,jdbcType=BIGINT}
  </update>

  <update id="updateByPaysn" parameterType="com.framework.loippi.entity.order.ShopOrderPay">
    UPDATE SHOP_ORDER_PAY
    <set>
      <include refid="set_column"/>
    </set>
    WHERE pay_sn = #{paySn,jdbcType=VARCHAR}
  </update>

  <!-- 删除单条记录 -->
  <delete id="delete">
		DELETE	FROM SHOP_ORDER_PAY
		WHERE	ID = #{id,jdbcType=BIGINT}
	</delete>

  <!-- 删除多条记录-->
  <delete id="deleteAll">
    DELETE FROM SHOP_ORDER_PAY
    WHERE ID IN
    <foreach item="ShopOrderPayId" index="index" collection="ids" open="(" separator="," close=")">
      #{ShopOrderPayId}
    </foreach>
  </delete>

  <!-- 根据参数查询列表-->
  <select id="findByParams" resultMap="ShopOrderPayResultMap">
    SELECT
    <include refid="base_column"/>
    FROM SHOP_ORDER_PAY
    <where>1=1
      <include refid="where_column"/>
    </where>
  </select>

  <!-- 分页查询-->
  <select id="findByPage" resultMap="ShopOrderPayResultMap">
    SELECT
    <include refid="base_column"/>
    FROM SHOP_ORDER_PAY
    <where>1=1
      <include refid="where_column"/>
    </where>
  </select>
</mapper> 