<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace必须指向Dao接口 -->
<mapper namespace="com.framework.loippi.dao.product.ShopGoodsGoodsDao">

    <resultMap id="ShopGoodsGoodsResultMap" type="com.framework.loippi.entity.product.ShopGoodsGoods">
        <id property="id" column="id"/>
        <result property="goodId" column="good_id"/>
        <result property="combineGoodsId" column="combine_goods_id"/>
        <result property="stock" column="stock"/>
        <result property="goodsSpec" column="goods_spec"/>
        <result property="joinNum" column="join_num"/>
    </resultMap>

    <!-- 定义可重用的SQL代码段，可以包含在其他语句中 -->
    <sql id="base_column">
		 id ,good_id ,combine_goods_id ,stock ,goods_spec,join_num
	</sql>

    <sql id="base_value_column">
		 #{id},#{goodId},#{combineGoodsId},#{stock},#{goodsSpec},#{joinNum}
	</sql>

    <!-- 定义可重用的WHERE SQL公共代码段，可以包含在其他语句中 -->
    <sql id="where_column">
        <if test="id != null and id != ''">
            AND id = #{id,jdbcType=BIGINT}
        </if>
        <if test="goodId != null and goodId != ''">
            AND good_id = #{goodId,jdbcType=BIGINT}
        </if>
        <if test="combineGoodsId != null and combineGoodsId != ''">
            AND combine_goods_id = #{combineGoodsId,jdbcType=BIGINT}
        </if>
        <if test="stock != null and stock != ''">
            AND stock = #{stock,jdbcType=INTEGER}
        </if>

        <if test="goodsSpec != null and goodsSpec != ''">
            AND goods_spec = #{goodsSpec}
        </if>
        <if test="joinNum != null and joinNum != ''">
            AND join_num = #{joinNum}
        </if>
        <if test="combineGoodsIds != null and combineGoodsIds != ''">
            AND combine_goods_id in
            <foreach collection="combineGoodsIds" open="(" separator="," close=")" item="item">${item}</foreach>
    </if>
    </sql>

    <!-- 设置语句 -->
    <sql id="set_column">
        <if test="id != null">
            id = #{id,jdbcType=BIGINT},
        </if>
        <if test="goodId != null">
            good_id = #{goodId,jdbcType=BIGINT},
        </if>
        <if test="combineGoodsId != null">
            combine_goods_id = #{combineGoodsId,jdbcType=BIGINT},
        </if>
        <if test="stock != null">
            stock = #{stock,jdbcType=INTEGER},
        </if>
        <if test="joinNum != null and joinNum != ''">
             join_num = #{joinNum},
        </if>
        <if test="goodsSpec != null and goodsSpec != ''">
            goods_spec = #{goodsSpec},
        </if>
    </sql>

    <!-- 根据ID查询 -->
    <select id="find" resultMap="ShopGoodsGoodsResultMap">
        SELECT
        <include refid="base_column"/>
        FROM SHOP_GOODS_GOODS
        WHERE ID=#{id,jdbcType=BIGINT}
    </select>

    <!-- 查询所有 -->
    <select id="findAll" resultMap="ShopGoodsGoodsResultMap">
        SELECT
        <include refid="base_column"/>
        FROM SHOP_GOODS_GOODS
    </select>

    <!-- 统计记录数 -->
    <select id="count" resultType="long">
        SELECT COUNT(*) FROM SHOP_GOODS_GOODS
        <where>
            <include refid="where_column"/>
        </where>
    </select>

    <!-- 插入 -->
    <insert id="insert" parameterType="com.framework.loippi.entity.product.ShopGoodsGoods">
        <selectKey resultType="java.lang.Long" order="AFTER" keyProperty="id">
            SELECT LAST_INSERT_ID() AS ID
        </selectKey>
        INSERT SHOP_GOODS_GOODS
        (
        <include refid="base_column"/>
        )
        VALUES (<include refid="base_value_column"/>)
    </insert>

    <!-- 修改 -->
    <update id="update" parameterType="com.framework.loippi.entity.product.ShopGoodsGoods">
        UPDATE SHOP_GOODS_GOODS
        <set>
            <include refid="set_column"/>
        </set>
        WHERE ID = #{id,jdbcType=BIGINT}
    </update>

    <!-- 删除单条记录 -->
    <delete id="delete">
		DELETE	FROM SHOP_GOODS_GOODS
		WHERE	ID = #{id,jdbcType=BIGINT}
	</delete>

    <!--删除id不在已知记录-->
    <delete id="deleteNotIds">
        DELETE FROM SHOP_GOODS_GOODS
        WHERE ID  IN
        <foreach item="ShopGoodsGoodsId" index="index" collection="ids" open="(" separator="," close=")">
            #{ShopGoodsGoodsId}
        </foreach>
    </delete>

    <!-- 删除多条记录-->
    <delete id="deleteAll">
        DELETE FROM SHOP_GOODS_GOODS
        WHERE ID IN
        <foreach item="ShopGoodsGoodsId" index="index" collection="ids" open="(" separator="," close=")">
            #{ShopGoodsGoodsId}
        </foreach>
    </delete>

    <!-- 根据参数查询列表-->
    <select id="findByParams" resultMap="ShopGoodsGoodsResultMap">
        SELECT
        SHOP_GOODS_GOODS.*,SHOP_GOODS.goods_name as goodsName,goods_retail_price,goods_retail_price ,goods_member_price ,goods_big_price ,ppv ,big_ppv,weight,join_num
        FROM SHOP_GOODS_GOODS
        LEFT JOIN SHOP_GOODS ON SHOP_GOODS.id=SHOP_GOODS_GOODS.combine_goods_id
        <where>1=1
            <include refid="where_column"/>
        </where>
    </select>

    <!-- 分页查询-->
    <select id="findByPage" resultMap="ShopGoodsGoodsResultMap">
        SELECT
        <include refid="base_column"/>
        FROM SHOP_GOODS_GOODS
        <where>1=1
            <include refid="where_column"/>
        </where>
    </select>

    <select id="findGoodsGoodsByGoodsId" parameterType="java.lang.Long" resultMap="ShopGoodsGoodsResultMap">
        select * from shop_goods_goods where good_id = #{goodId}
    </select>

    <select id="findGoodsGoods" parameterType="java.util.Map" resultMap="ShopGoodsGoodsResultMap">
        select * from shop_goods_goods where good_id = #{goodId} and combine_goods_id = #{combineGoodsId}
    </select>

</mapper> 