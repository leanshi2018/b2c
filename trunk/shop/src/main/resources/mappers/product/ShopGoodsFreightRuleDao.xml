<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace必须指向Dao接口 -->
<mapper namespace="com.framework.loippi.dao.product.ShopGoodsFreightRuleDao">
	
	<resultMap id="ShopGoodsFreightRuleResultMap" type="com.framework.loippi.entity.product.ShopGoodsFreightRule">
		<id property="id" column="id"  />
		<result property="memberGradeId" column="member_grade_id" />
		<result property="memberGradeName" column="member_grade_name" />
		<result property="maximumOrderAmount" column="maximum_order_amount" />
		<result property="minimumOrderAmount" column="minimum_order_amount" />
		<result property="preferential" column="preferential" />
		<result property="createTime" column="create_time" />
		<result property="updateTime" column="update_time" />
	</resultMap>
	
	<!-- 定义可重用的SQL代码段，可以包含在其他语句中 -->
	<sql id="base_column">
		 id ,member_grade_id ,member_grade_name ,maximum_order_amount ,minimum_order_amount ,preferential ,create_time ,update_time 
	</sql>
	
	<sql id="base_value_column">
		 #{id},#{memberGradeId},#{memberGradeName},#{maximumOrderAmount},#{minimumOrderAmount},#{preferential},#{createTime},#{updateTime}
	</sql>
	
	<!-- 定义可重用的WHERE SQL公共代码段，可以包含在其他语句中 -->
	<sql id="where_column">
		<if test="id != null and id != ''">
			AND id = #{id,jdbcType=BIGINT}
		</if>
		<if test="memberGradeId != null">
			AND member_grade_id = #{memberGradeId}
		</if>
		<if test="memberGradeName != null and memberGradeName != ''">
			AND member_grade_name = #{memberGradeName,jdbcType=VARCHAR}
		</if>
		<if test="maximumOrderAmount != null and maximumOrderAmount != ''">
			AND maximum_order_amount = #{maximumOrderAmount}
		</if>
		<if test="minimumOrderAmount != null and minimumOrderAmount != ''">
			AND minimum_order_amount = #{minimumOrderAmount}
		</if>
		<if test="preferential != null and preferential != ''">
			AND preferential = #{preferential}
		</if>
		<if test="createTime != null and createTime != ''">
			AND create_time = #{createTime}
		</if>
		<if test="updateTime != null and updateTime != ''">
			AND update_time = #{updateTime}
		</if>
		<if test="goodsTotalAmount != null and goodsTotalAmount != ''">
			AND maximum_order_amount <![CDATA[>=]]>  #{goodsTotalAmount}
			AND minimum_order_amount <![CDATA[<]]>  #{goodsTotalAmount}
		</if>
		<if test="maxIsNull != null and maxIsNull != ''">
			AND maximum_order_amount is null
			AND minimum_order_amount <![CDATA[<]]>  #{maxIsNull}
		</if>
	</sql>
	
	<!-- 设置语句 -->
	<sql id="set_column">
		<if test="id != null">
			id = #{id,jdbcType=BIGINT},
		</if>
		<if test="memberGradeId != null">
			member_grade_id = #{memberGradeId},
		</if>
		<if test="memberGradeName != null and memberGradeName != ''">
			member_grade_name = #{memberGradeName,jdbcType=VARCHAR},
		</if>
		<if test="maximumOrderAmount != null">
			maximum_order_amount = #{maximumOrderAmount},
		</if>
		<if test="minimumOrderAmount != null">
			minimum_order_amount = #{minimumOrderAmount},
		</if>
		<if test="preferential != null">
			preferential = #{preferential},
		</if>
		<if test="createTime != null">
			create_time = #{createTime},
		</if>
		<if test="updateTime != null">
			update_time = #{updateTime},
		</if>
	</sql>

	<!-- 根据ID查询 -->
	<select id="find" resultMap="ShopGoodsFreightRuleResultMap">
		SELECT	<include refid="base_column" />
		FROM	SHOP_GOODS_FREIGHT_RULE
		WHERE	ID=#{id,jdbcType=BIGINT}
	</select>
	
	<!-- 查询所有 -->
	<select id="findAll" resultMap="ShopGoodsFreightRuleResultMap">
		SELECT	<include refid="base_column" />
		FROM	SHOP_GOODS_FREIGHT_RULE
	</select>
	<!-- 求最小值最大的那条数据 -->
	<select id="findMaxMinimumOrderAmount" resultMap="ShopGoodsFreightRuleResultMap">
		SELECT	max(minimum_order_amount),<include refid="base_column" />
		FROM	SHOP_GOODS_FREIGHT_RULE
		<where>
			<include refid="where_column" />
		</where>
	</select>

	<!-- 统计记录数 -->
	<select id="count" resultType="long">
		SELECT COUNT(*) FROM SHOP_GOODS_FREIGHT_RULE
		<where> 
			<include refid="where_column" />
		</where>
	</select>
	
	<!-- 插入 -->
	<insert id="insert" parameterType="com.framework.loippi.entity.product.ShopGoodsFreightRule">
		<selectKey resultType="java.lang.Long" order="AFTER" keyProperty="id">  
	          SELECT LAST_INSERT_ID() AS ID    
	    </selectKey>  
		INSERT SHOP_GOODS_FREIGHT_RULE 
				(<include refid="base_column" /> )
		VALUES	(<include refid="base_value_column" />)
	</insert>

	<update id="updateBatch" parameterType="java.util.List">
		<foreach close="" collection="list" index="index" item="item" open="" separator=";">
			update SHOP_GOODS_FREIGHT_RULE
			<set>
				<if test="item.maximumOrderAmount != null">
					maximum_order_amount = #{item.maximumOrderAmount} ,
				</if>
				<if test="item.minimumOrderAmount != null">
					minimum_order_amount = #{item.minimumOrderAmount},
				</if>
				update_time = #{item.updateTime},
			preferential = #{item.preferential}
			</set>
			where id = #{item.id}
		</foreach>
	</update>

	<insert id="insertBatch" parameterType="List">
		<selectKey resultType ="java.lang.Integer" keyProperty= "id"  order= "AFTER">
		                 SELECT LAST_INSERT_ID()
		             </selectKey >
	            insert into SHOP_GOODS_FREIGHT_RULE
	            ( id , member_grade_id ,member_grade_name ,maximum_order_amount ,minimum_order_amount ,preferential ,create_time ,update_time )
	            values
	             <foreach collection ="list" item="reddemCode" index= "index" separator =",">
	                 ( #{reddemCode.id},
					 #{reddemCode.memberGradeId},#{reddemCode.memberGradeName},#{reddemCode.maximumOrderAmount},
					 #{reddemCode.minimumOrderAmount},#{reddemCode.preferential},#{reddemCode.createTime},#{reddemCode.updateTime}
	                 )
	             </foreach >
	</insert>

	<!-- 修改 -->
	<update id="update" parameterType="com.framework.loippi.entity.product.ShopGoodsFreightRule">
		UPDATE	SHOP_GOODS_FREIGHT_RULE
		<set>
			<include refid="set_column" />
		</set>
		WHERE	ID = #{id,jdbcType=BIGINT}
	</update>
	
	<!-- 删除单条记录 -->
	<delete id="delete">
		DELETE	FROM SHOP_GOODS_FREIGHT_RULE
		WHERE	ID = #{id,jdbcType=BIGINT}
	</delete>
	
	<!-- 删除多条记录-->
	<delete id="deleteAll">
		DELETE	FROM SHOP_GOODS_FREIGHT_RULE
		WHERE	ID	IN
    	<foreach item="ShopGoodsFreightRuleId" index="index" collection="ids" open="(" separator="," close=")">
	  		#{ShopGoodsFreightRuleId} 
		</foreach>
	</delete>
	
	<!-- 根据参数查询列表-->
	<select id="findByParams" resultMap="ShopGoodsFreightRuleResultMap">
		SELECT	<include refid="base_column" />
		FROM 	SHOP_GOODS_FREIGHT_RULE
		<where> 1=1
			<include refid="where_column" />
		</where>
		<if test="groupBy != null and groupBy != ''">
			 ${groupBy}
		</if>
	</select>
	
	<!-- 分页查询-->
	<select id="findByPage" resultMap="ShopGoodsFreightRuleResultMap">
		SELECT
		<include refid="base_column" />
		FROM SHOP_GOODS_FREIGHT_RULE
		<where> 1=1
			<include refid="where_column" />
		</where>
		order by member_grade_id
	</select>
	
</mapper> 